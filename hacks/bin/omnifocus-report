#! /usr/bin/osascript -l JavaScript
// -*- mode: JavaScript -*-


// takes a Date and returns the interval in seconds since now.
function timeIntervalSinceNow(d) {
  now = new Date();
  interval = now.getTime() - d.getTime();
  return interval / 1000; // Remember, JavaScript time is milliseconds
}

function daysFromInterval(i) {
  return Math.round(i / 86400)
}

// Calculate churn rate, as defined here:
// http://calnewport.com/blog/2007/11/08/are-you-effective-or-just-busy-calculate-your-churn-rate-to-find-out/
function churnRate(completedProjects, oldestProjectDate) {
  let interval = timeIntervalSinceNow(oldestProjectDate);
  let intervalDays = daysFromInterval(interval);
  let churn = (completedProjects / intervalDays) * 100;
  return churn;
}

// Turns out that project.completed() only counted "done", which meant
// that dropped project were getting counted as active. Explicitly use
// the status property to test for the state we actually want.
function isProjectActive(project) {
  return project.status() === "active status";
}

// We want to distinguish between projects that repeat (Rituals) and
// projects that are actually completed.
function isProjectRepeating(project) {
  rule = project.repetitionRule()
  if (rule) {
    return true;
  }
  return false;
}

function run(argv) {
  let ofApp = Application("OmniFocus");
  if (! ofApp) {
    console.log("Couldn't find OmniFocus 3");
    return
  }
  ofApp.includeStandardAdditions = true;
  ofApp.strictPropertyScope = true;
  ofApp.strictCommandScope = true;
  ofApp.strictParameterType = true;
  let ofAppAlreadyRunning = ofApp.running();
  let doc = ofApp.defaultDocument();
  projects = doc.flattenedProjects();
  let activeProjects = 0;
  let completedProjects = 0;
  let activeTasks = 0;
  let oldestProjectDate = new Date();
  for (let p of projects) {
    if (isProjectActive(p)) {
      activeProjects += 1;
      activeTasks += (p.numberOfTasks() - p.numberOfCompletedTasks());
    } else {
      completedProjects += 1;
    }
    // singletonActionHolder maps to "Single Action" projects.
    // We use that to indicate if the project should count towards
    // the churn calculation (single action projects are forever so should
    // be excluded).
    if (! p.singletonActionHolder()) {
      if (oldestProjectDate > p.creationDate()) {
        oldestProjectDate = p.creationDate();
      }
    }
  }
  let now = new Date();
  let churn = churnRate(completedProjects, oldestProjectDate)
  console.log("Date,Active Projects,Active Tasks,Churn Rate");
  console.log(now.toLocaleDateString() + ", " + activeProjects + ", "
              + activeTasks + ", " + churn.toPrecision(3));
    if (! ofAppAlreadyRunning) {
    ofApp.quit();
  }
}
