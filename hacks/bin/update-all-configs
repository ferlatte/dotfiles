#! /bin/bash

set -eu -o pipefail

function inpath {
    which $1 > /dev/null
}

pushd ~/dotfiles > /dev/null
git pull
stow [a-z]*
popd

pushd ~/.bash_it > /dev/null
git pull
popd

bash-it-configure

brew update
brew upgrade
brew cleanup

if inpath pyenv; then
    pyenv rehash
fi

vagrant plugin update

# These end up in ~/src/go/bin
go get -u github.com/nsf/gocode
go get -u github.com/golang/lint/golint
go get -u github.com/mattes/migrate
go get -u github.com/mvdan/sh/cmd/shfmt

# Update arcanist
if [[ -d $HOME/src/arcanist ]]; then
    pushd $HOME/src/arcanist
    git pull
    popd
    pushd $HOME/src/libphutil
    git pull
    popd
fi

open /Applications/Emacs.app

# HACK: Really, we should use e --eval to poll to see when Emacs is ready.
sleep 10

# If you don't refresh package before updating prelude, prelude-update
# doesn't appear to reliably work.
# EMACS Prelude does it's own git update, followed by a ton of stuff
e --eval \
  '(package-refresh-contents)' \
  '(prelude-update)'


readonly chromeupdater=/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/MacOS/GoogleSoftwareUpdateAgent

if [[ -x $chromeupdater ]]; then
    echo -n "Requesting Chrome update... "
    $chromeupdater -runMode oneshot -userInitiated YES
    echo "done."
fi
